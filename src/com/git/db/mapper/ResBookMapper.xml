<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.git.db.mapper.ResBookMapper" >
  <resultMap id="BaseResultMap" type="com.git.db.beans.ResBook" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SN" property="sn" jdbcType="VARCHAR" />
    <result column="NAME_CN" property="nameCn" jdbcType="VARCHAR" />
    <result column="NAME_EN" property="nameEn" jdbcType="VARCHAR" />
    <result column="PUBLISH" property="publish" jdbcType="VARCHAR" />
    <result column="PUBLISH_DATE" property="publishDate" jdbcType="DATE" />
    <result column="INSERT_DATE" property="insertDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, SN, NAME_CN, NAME_EN, PUBLISH, PUBLISH_DATE, INSERT_DATE, UPDATE_DATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.git.db.beans.ResBookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from res_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from res_book
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from res_book
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.git.db.beans.ResBookExample" >
    delete from res_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.git.db.beans.ResBook" >
    insert into res_book (ID, SN, NAME_CN, 
      NAME_EN, PUBLISH, PUBLISH_DATE, 
      INSERT_DATE, UPDATE_DATE)
    values (#{id,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, #{nameCn,jdbcType=VARCHAR}, 
      #{nameEn,jdbcType=VARCHAR}, #{publish,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, 
      #{insertDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.git.db.beans.ResBook" >
    insert into res_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="sn != null" >
        SN,
      </if>
      <if test="nameCn != null" >
        NAME_CN,
      </if>
      <if test="nameEn != null" >
        NAME_EN,
      </if>
      <if test="publish != null" >
        PUBLISH,
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE,
      </if>
      <if test="insertDate != null" >
        INSERT_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="nameCn != null" >
        #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="insertDate != null" >
        #{insertDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.git.db.beans.ResBookExample" resultType="java.lang.Integer" >
    select count(*) from res_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update res_book
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null" >
        SN = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.nameCn != null" >
        NAME_CN = #{record.nameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null" >
        NAME_EN = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null" >
        PUBLISH = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null" >
        PUBLISH_DATE = #{record.publishDate,jdbcType=DATE},
      </if>
      <if test="record.insertDate != null" >
        INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update res_book
    set ID = #{record.id,jdbcType=INTEGER},
      SN = #{record.sn,jdbcType=VARCHAR},
      NAME_CN = #{record.nameCn,jdbcType=VARCHAR},
      NAME_EN = #{record.nameEn,jdbcType=VARCHAR},
      PUBLISH = #{record.publish,jdbcType=VARCHAR},
      PUBLISH_DATE = #{record.publishDate,jdbcType=DATE},
      INSERT_DATE = #{record.insertDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.git.db.beans.ResBook" >
    update res_book
    <set >
      <if test="sn != null" >
        SN = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="nameCn != null" >
        NAME_CN = #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        NAME_EN = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        PUBLISH = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        PUBLISH_DATE = #{publishDate,jdbcType=DATE},
      </if>
      <if test="insertDate != null" >
        INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.git.db.beans.ResBook" >
    update res_book
    set SN = #{sn,jdbcType=VARCHAR},
      NAME_CN = #{nameCn,jdbcType=VARCHAR},
      NAME_EN = #{nameEn,jdbcType=VARCHAR},
      PUBLISH = #{publish,jdbcType=VARCHAR},
      PUBLISH_DATE = #{publishDate,jdbcType=DATE},
      INSERT_DATE = #{insertDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="map" >
    select    
   		<include refid="Base_Column_List" />
    from res_book c
    	<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keywords != null">
				AND (
					c.NAME_CN LIKE "%"#{keywords}"%"
					or c.NAME_EN LIKE "%"#{keywords}"%"
					or c.SN LIKE "%"#{keywords}"%"
				)
      		</if>
      	</trim>
      	order by c.INSERT_DATE DESC 
  </select>
  <select id="countByCondition" resultType="java.lang.Integer" parameterType="map" >
    select count(0) as a from res_book c
    	<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="keywords != null">
				AND (
					c.NAME_CN LIKE "%"#{keywords}"%"
					or c.NAME_EN LIKE "%"#{keywords}"%"
					or c.SN LIKE "%"#{keywords}"%"
				)
      		</if>
      	</trim>
  </select>
</mapper>