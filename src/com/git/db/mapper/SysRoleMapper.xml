<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.git.db.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.git.db.beans.SysRole">
    <id column="Role_Id" jdbcType="BIGINT" property="roleId" />
    <result column="Role_Name" jdbcType="VARCHAR" property="roleName" />
    <result column="Role_Status" jdbcType="CHAR" property="roleStatus" />
    <result column="Extend1" jdbcType="VARCHAR" property="extend1" />
    <result column="Extend2" jdbcType="VARCHAR" property="extend2" />
    <result column="Extend3" jdbcType="VARCHAR" property="extend3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Role_Id, Role_Name, Role_Status, Extend1, Extend2, Extend3
  </sql>
  <select id="selectByExample" parameterType="com.git.db.beans.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where Role_Id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where Role_Id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.git.db.beans.SysRoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.git.db.beans.SysRole">
    insert into sys_role (Role_Id, Role_Name, Role_Status, 
      Extend1, Extend2, Extend3
      )
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleStatus,jdbcType=CHAR}, 
      #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, #{extend3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.git.db.beans.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        Role_Id,
      </if>
      <if test="roleName != null">
        Role_Name,
      </if>
      <if test="roleStatus != null">
        Role_Status,
      </if>
      <if test="extend1 != null">
        Extend1,
      </if>
      <if test="extend2 != null">
        Extend2,
      </if>
      <if test="extend3 != null">
        Extend3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=CHAR},
      </if>
      <if test="extend1 != null">
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null">
        #{extend3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.git.db.beans.SysRoleExample" resultType="java.lang.Integer">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.roleId != null">
        Role_Id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        Role_Name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleStatus != null">
        Role_Status = #{record.roleStatus,jdbcType=CHAR},
      </if>
      <if test="record.extend1 != null">
        Extend1 = #{record.extend1,jdbcType=VARCHAR},
      </if>
      <if test="record.extend2 != null">
        Extend2 = #{record.extend2,jdbcType=VARCHAR},
      </if>
      <if test="record.extend3 != null">
        Extend3 = #{record.extend3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set Role_Id = #{record.roleId,jdbcType=BIGINT},
      Role_Name = #{record.roleName,jdbcType=VARCHAR},
      Role_Status = #{record.roleStatus,jdbcType=CHAR},
      Extend1 = #{record.extend1,jdbcType=VARCHAR},
      Extend2 = #{record.extend2,jdbcType=VARCHAR},
      Extend3 = #{record.extend3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.git.db.beans.SysRole">
    update sys_role
    <set>
      <if test="roleName != null">
        Role_Name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        Role_Status = #{roleStatus,jdbcType=CHAR},
      </if>
      <if test="extend1 != null">
        Extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        Extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="extend3 != null">
        Extend3 = #{extend3,jdbcType=VARCHAR},
      </if>
    </set>
    where Role_Id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.git.db.beans.SysRole">
    update sys_role
    set Role_Name = #{roleName,jdbcType=VARCHAR},
      Role_Status = #{roleStatus,jdbcType=CHAR},
      Extend1 = #{extend1,jdbcType=VARCHAR},
      Extend2 = #{extend2,jdbcType=VARCHAR},
      Extend3 = #{extend3,jdbcType=VARCHAR}
    where Role_Id = #{roleId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.git.db.beans.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.git.db.beans.SysRole" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    where 1=1 
    <if test="roleName != null &amp;&amp; roleName != ''" >
       AND (
				Role_Name LIKE CONCAT('%','${roleName}','%' )
			)
    </if>
    <if test="roleStatus != null &amp;&amp; roleStatus != ''" >
      and Role_Status= #{roleStatus,jdbcType=CHAR}
    </if>
    order by Role_Id desc
  </select>
  
  <select id="countByCondition" parameterType="com.git.db.beans.SysRole" resultType="java.lang.Integer" >
    select count(0) from sys_role
     where 1=1
    <if test="roleName != null &amp;&amp; roleName != ''" >
       AND (
				Role_Name LIKE CONCAT('%','${roleName}','%' )
			)
    </if>
    <if test="roleStatus != null &amp;&amp; roleStatus != ''" >
      and Role_Status= #{roleStatus,jdbcType=CHAR}
    </if>
  </select>  
  <select id="isUniqueRoleName" parameterType="map" resultType="java.lang.Long">
		select count(0) as c
		from sys_role where 1=1 
		<if test="id != null &amp;&amp; id > 0 " >
			and role_id != #{id} 
		</if>
		and Role_Name = #{roleName} 
  </select>
</mapper>